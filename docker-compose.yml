version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: app
    volumes:
      - ./:/var/www:cached
      - /var/www/vendor
      - /var/www/node_modules
    depends_on:
      - mysql
      - redis
    networks:
      - laravel

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www:cached
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - laravel

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: spotrate
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_PASSWORD: secret
      MYSQL_USER: spotrate
    volumes:
      - dbdata:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
             --innodb-buffer-pool-size=256M
             --innodb-redo-log-capacity=134217728
             --max-connections=200
             --skip-host-cache
    networks:
      - laravel

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redisdata:/data
    networks:
      - laravel

  node:
    image: node:20-alpine
    container_name: node
    working_dir: /var/www
    ports:
      - "5173:5173"
    volumes:
      - ./:/var/www:cached
    entrypoint: [ "tail", "-f", "/dev/null" ]
    networks:
      - laravel

volumes:
  dbdata:
    driver: local
  redisdata:
    driver: local

networks:
  laravel:
    driver: bridge
