name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  continuous-integration:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, intl, gd, zip, pcntl, pdo, pdo_mysql
          coverage: xdebug

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Composer dependencies
        uses: ramsey/composer-install@v2
        with:
          dependency-versions: "locked"

      - name: Generate key
        run: php artisan key:generate

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install NPM dependencies
        run: npm install

      - name: Build assets
        run: npm run build

      - name: Run code style chech with Pint
        run: ./vendor/bin/pint --preset psr12 --test

      - name: Run tests
        run: php artisan test --coverage-clover=coverage.xml

      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: true

  deploy:
    needs: continuous-integration
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_SSH_HOST }}
          username: ${{ secrets.VPS_SSH_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /var/www/spotrate
            php artisan down
            git pull origin main
            echo "${{ secrets.VPS_ENV_FILE }}" | base64 -d > .env
            composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev
            npm install
            npm run build
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            sudo systemctl restart php8.2-fpm
            chown -R www-data:www-data .
            find . -type d -exec chmod 755 {} \;
            find . -type f -exec chmod 644 {} \;
            php artisan up
